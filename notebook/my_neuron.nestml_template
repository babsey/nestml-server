neuron {name}:

  state:
    r integer = 0                 # counts number of tick during the refractory period
    V_abs mV = 0 mV
  end

  equations:
    kernel I_kernel_inh = (e / tau_syn_inh) * t * exp(-t / tau_syn_inh)
    kernel I_kernel_exc = (e / tau_syn_exc) * t * exp(-t / tau_syn_exc)
    recordable inline V_m mV = V_abs + E_L # Membrane potential.
    inline I pA = convolve(I_kernel_inh, inh_spikes) + convolve(I_kernel_exc, exc_spikes) + I_e + I_stim
    V_abs' = -V_abs/tau_m + I/C_m
  end

  parameters:
    C_m     pF = 250 pF       # Capacitance of the membrane
    tau_m   ms = 10 ms        # Membrane time constant
    tau_syn_inh ms = 2 ms     # Time constant of synaptic current
    tau_syn_exc ms = 2 ms     # Time constant of synaptic current
    t_ref   ms = 2 ms         # Duration of refractory period
    E_L     mV = -70 mV       # Resting potential
    V_reset mV = -70 mV - E_L # Reset potential of the membrane
    V_th   mV = -55 mV - E_L  # Spike threshold
    I_e pA = 0 pA
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
  end

  input:
    exc_spikes pA <- excitatory spike
    inh_spikes pA <- inhibitory spike
    I_stim pA <- continuous
  end

  output: spike

  update:
    if r == 0: # neuron not refractory
      integrate_odes()
    else: # neuron is absolute refractory
      r = r - 1
    end

    if V_abs >= V_th: # threshold crossing
      r = RefractoryCounts
      V_abs = V_reset
      emit_spike()
    end

  end

end